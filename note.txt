<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clock App</title>
    <style>
        *{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body{
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font:bold 12px Arial, Helvetica, sans-serif;
            background-color: black;
            padding: 20px;
        }
        .main-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            gap: 20px;
            width: 90vw;
            height: 85vh;
            max-width: 1400px;
        }
        
        .tile{
            border: 1px solid #606060;
            color: white;
            padding: 30px;
            border-radius: 10px;
            background-color: #222;
            display: flex;
            flex-direction: column;
            justify-content: center;
            position: relative;
        }

        .clock-tile {
            grid-column: 1 / 2;
            grid-row: 1 / 3;
        }

        .stopwatch-tile {
            grid-column: 2 / 3;
            grid-row: 1 / 2;
        }

        .timer-tile {
            grid-column: 2 / 3;
            grid-row: 2 / 3;
        }
        
        /* Analog Clock Styles */
        .analog-clock {
            width: 300px;
            height: 300px;
            border: 4px solid #606060;
            border-radius: 50%;
            margin: 0 auto 20px;
            position: relative;
            background: radial-gradient(circle, #444 0%, #222 100%);
            box-shadow: inset 0 0 30px rgba(0,0,0,0.7), 0 0 20px rgba(96,96,96,0.5);
        }
        
        /* Center dot */
        .analog-clock::before {
            content: '';
            position: absolute;
            width: 14px;
            height: 14px;
            background: #fff;
            border-radius: 50%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 10;
            box-shadow: 0 0 10px rgba(255,255,255,0.8);
        }
        
        /* Hour markers (tick marks) */
        .hour-marker {
            position: absolute;
            width: 4px;
            height: 15px;
            background: #fff;
            top: 10px;
            left: 50%;
            transform-origin: 50% 140px;
            margin-left: -2px;
        }
        
        /* Minute markers (smaller tick marks) */
        .minute-marker {
            position: absolute;
            width: 2px;
            height: 10px;
            background: #888;
            top: 15px;
            left: 50%;
            transform-origin: 50% 135px;
            margin-left: -1px;
        }
        
        /* Clock hands */
        .hand {
            position: absolute;
            bottom: 50%;
            left: 50%;
            transform-origin: bottom center;
            border-radius: 10px;
        }
        
        .hour-hand {
            width: 8px;
            height: 80px;
            background: linear-gradient(to top, #fff, #ddd);
            margin-left: -4px;
            box-shadow: 0 0 5px rgba(0,0,0,0.5);
            z-index: 3;
        }
        
        .minute-hand {
            width: 6px;
            height: 110px;
            background: linear-gradient(to top, #fff, #ccc);
            margin-left: -3px;
            box-shadow: 0 0 5px rgba(0,0,0,0.5);
            z-index: 2;
        }
        
        .second-hand {
            width: 3px;
            height: 120px;
            background: #ff6b6b;
            margin-left: -1.5px;
            box-shadow: 0 0 3px rgba(255,107,107,0.8);
            z-index: 4;
        }
        
        #Date{
            font-size: 18px !important;
            text-align: center;
            margin-bottom: 15px;
            color: #ccc;
        }
        .digital-clock {
            font-size: 48px;
            text-align: center;
            font-family: 'Courier New', monospace;
            color: #fff;
            letter-spacing: 5px;
            font-weight: bold;
        }

        /* Stopwatch & Timer Styles */
        .tile h2 {
            text-align: center;
            font-size: 28px;
            margin-bottom: 20px;
            color: #fff;
        }

        .display {
            font-size: 50px;
            text-align: center;
            margin-bottom: 20px;
            font-family: 'Courier New', monospace;
            color: #fff;
        }

        .controls {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 24px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-start {
            background-color: #4CAF50;
            color: white;
        }

        .btn-start:hover {
            background-color: #45a049;
        }

        .btn-stop {
            background-color: #f44336;
            color: white;
        }

        .btn-stop:hover {
            background-color: #da190b;
        }

        .btn-reset {
            background-color: #2196F3;
            color: white;
        }

        .btn-reset:hover {
            background-color: #0b7dda;
        }

        /* Timer editable display */
        .timer-display-editable {
            display: flex;
            gap: 5px;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }

        .timer-digit {
            width: 70px;
            padding: 10px;
            font-size: 40px;
            text-align: center;
            border: 2px solid #606060;
            border-radius: 5px;
            background-color: #333;
            color: white;
            font-family: 'Courier New', monospace;
        }

        .timer-digit:focus {
            outline: none;
            border-color: #4CAF50;
            background-color: #444;
        }

        .timer-separator {
            font-size: 40px;
            color: #fff;
            font-family: 'Courier New', monospace;
        }

        .alert {
            color: #ff6b6b;
            font-size: 18px;
            text-align: center;
            margin-top: 10px;
            font-weight: bold;
            animation: blink 1s infinite;
        }

        @keyframes blink {
            0%, 50%, 100% { opacity: 1; }
            25%, 75% { opacity: 0.3; }
        }

        /* Toggle Buttons */
        .toggle-container {
            position: absolute;
            bottom: 5px;
            right: 5px;
            display: flex;
            gap: 5px;
        }

        .toggle-btn {
            width: 20px;
            height: 20px;
            border: 1px solid #606060;
            border-radius: 2px;
            background-color: #333;
            cursor: pointer;
            transition: all 0.3s;
        }

        .toggle-btn:hover {
            background-color: #555;
            border-color: #888;
        }

        .toggle-btn.active {
            background-color: #4CAF50;
            border-color: #4CAF50;
            box-shadow: 0 0 5px rgba(76, 175, 80, 0.8);
        }

        @media (max-width: 1024px) {
            .main-container {
                grid-template-columns: 1fr;
                grid-template-rows: auto auto auto;
            }
            
            .clock-tile {
                grid-column: 1 / 2;
                grid-row: 1 / 2;
            }

            .stopwatch-tile {
                grid-column: 1 / 2;
                grid-row: 2 / 3;
            }

            .timer-tile {
                grid-column: 1 / 2;
                grid-row: 3 / 4;
            }
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Clock Tile (2/4 of screen) -->
        <div class="tile clock-tile">
            <div class="analog-clock" id="analog-clock">
                <div class="hand hour-hand" id="hour-hand"></div>
                <div class="hand minute-hand" id="minute-hand"></div>
                <div class="hand second-hand" id="second-hand"></div>
            </div>
            
            <div id="Date">Monday 26 September 2023</div>
            <div class="digital-clock" id="digital-clock">05:20:30</div>
            
            <!-- Toggle Buttons -->
            <div class="toggle-container">
                <div class="toggle-btn active" data-toggle="24hr" title="24 Hour Format"></div>
                <div class="toggle-btn" data-toggle="12hr" title="12 Hour Format"></div>
            </div>
        </div>

        <!-- Stopwatch Tile (1/4 of screen) -->
        <div class="tile stopwatch-tile">
            <h2>Stopwatch</h2>
            <div class="display" id="stopwatch-display">00:00:00:000</div>
            <div class="controls">
                <button class="btn btn-start" id="stopwatch-start">Start</button>
                <button class="btn btn-stop" id="stopwatch-stop">Stop</button>
                <button class="btn btn-reset" id="stopwatch-reset">Reset</button>
            </div>
        </div>

        <!-- Timer Tile (1/4 of screen) -->
        <div class="tile timer-tile">
            <h2>Timer</h2>
            <div class="timer-display-editable">
                <input type="text" class="timer-digit" id="timer-hours" maxlength="2" value="00">
                <span class="timer-separator">:</span>
                <input type="text" class="timer-digit" id="timer-minutes" maxlength="2" value="00">
                <span class="timer-separator">:</span>
                <input type="text" class="timer-digit" id="timer-seconds" maxlength="2" value="00">
            </div>
            <div class="controls">
                <button class="btn btn-start" id="timer-start">Start</button>
                <button class="btn btn-stop" id="timer-stop">Stop</button>
                <button class="btn btn-reset" id="timer-reset">Reset</button>
            </div>
            <div class="alert" id="timer-alert" style="display: none;">TIME'S UP! ⏰</div>
        </div>
    </div>

    <script>
        // ========== CLOCK ==========
        var clockFormat = '24hr'; // Default format

        function initializeClock() {
            var analogClock = document.getElementById('analog-clock');
            
            for (var i = 1; i <= 12; i++) {
                var hourMarker = document.createElement('div');
                hourMarker.className = 'hour-marker';
                hourMarker.style.transform = 'rotate(' + (i * 30) + 'deg)';
                analogClock.appendChild(hourMarker);
            }
            
            for (var i = 0; i < 60; i++) {
                if (i % 5 !== 0) {
                    var minuteMarker = document.createElement('div');
                    minuteMarker.className = 'minute-marker';
                    minuteMarker.style.transform = 'rotate(' + (i * 6) + 'deg)';
                    analogClock.appendChild(minuteMarker);
                }
            }
        }
        
        function clock(){
            var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            var dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            var today = new Date();
            document.getElementById('Date').innerHTML = (dayNames[today.getDay()] + " " + today.getDate() + ' ' + monthNames[today.getMonth()] + ' ' + today.getFullYear());
            
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            
            var displayHours = h;
            var ampm = '';
            
            if (clockFormat === '12hr') {
                ampm = h >= 12 ? ' PM' : ' AM';
                displayHours = h % 12;
                displayHours = displayHours ? displayHours : 12; // Convert 0 to 12
            }

            displayHours = displayHours < 10 ? '0' + displayHours : displayHours;
            m = m < 10 ? '0' + m : m;
            s = s < 10 ? '0' + s : s;

            document.getElementById('digital-clock').innerHTML = displayHours + ':' + m + ':' + s + ampm;

            var hourHand = document.getElementById('hour-hand');
            var minuteHand = document.getElementById('minute-hand');
            var secondHand = document.getElementById('second-hand');

            var hours = today.getHours() % 12;
            var minutes = today.getMinutes();
            var seconds = today.getSeconds();

            var hourDeg = (hours * 30) + (minutes * 0.5);
            var minuteDeg = (minutes * 6);
            var secondDeg = (seconds * 6);

            hourHand.style.transform = 'rotate(' + hourDeg + 'deg)';
            minuteHand.style.transform = 'rotate(' + minuteDeg + 'deg)';
            secondHand.style.transform = 'rotate(' + secondDeg + 'deg)';
        }
        
        initializeClock();
        var inter = setInterval(clock, 400);
        clock();

        // ========== TOGGLE BUTTONS ==========
        var toggleButtons = document.querySelectorAll('.toggle-btn');
        toggleButtons.forEach(function(btn) {
            btn.addEventListener('click', function() {
                // Remove active class from all buttons
                toggleButtons.forEach(function(b) {
                    b.classList.remove('active');
                });
                // Add active class to clicked button
                this.classList.add('active');
                
                // Update clock format
                clockFormat = this.getAttribute('data-toggle');
                clock(); // Update display immediately
            });
        });

        // ========== STOPWATCH ==========
        var stopwatchInterval;
        var stopwatchTime = 0; // in milliseconds
        var stopwatchRunning = false;

        function updateStopwatchDisplay() {
            var totalSeconds = Math.floor(stopwatchTime / 1000);
            var hours = Math.floor(totalSeconds / 3600);
            var minutes = Math.floor((totalSeconds % 3600) / 60);
            var seconds = totalSeconds % 60;
            var milliseconds = stopwatchTime % 1000;

            document.getElementById('stopwatch-display').textContent = 
                (hours < 10 ? '0' + hours : hours) + ':' +
                (minutes < 10 ? '0' + minutes : minutes) + ':' +
                (seconds < 10 ? '0' + seconds : seconds) + ':' +
                (milliseconds < 100 ? '0' : '') + (milliseconds < 10 ? '0' : '') + milliseconds;
        }

        document.getElementById('stopwatch-start').addEventListener('click', function() {
            if (!stopwatchRunning) {
                stopwatchRunning = true;
                stopwatchInterval = setInterval(function() {
                    stopwatchTime += 10;
                    updateStopwatchDisplay();
                }, 10);
            }
        });

        document.getElementById('stopwatch-stop').addEventListener('click', function() {
            stopwatchRunning = false;
            clearInterval(stopwatchInterval);
        });

        document.getElementById('stopwatch-reset').addEventListener('click', function() {
            stopwatchRunning = false;
            clearInterval(stopwatchInterval);
            stopwatchTime = 0;
            updateStopwatchDisplay();
        });

        // ========== TIMER ==========
        var timerInterval;
        var timerTotalSeconds = 0;
        var timerRunning = false;

        function formatTimerDisplay(totalSeconds) {
            var hours = Math.floor(totalSeconds / 3600);
            var minutes = Math.floor((totalSeconds % 3600) / 60);
            var seconds = totalSeconds % 60;

            document.getElementById('timer-hours').value = (hours < 10 ? '0' : '') + hours;
            document.getElementById('timer-minutes').value = (minutes < 10 ? '0' : '') + minutes;
            document.getElementById('timer-seconds').value = (seconds < 10 ? '0' : '') + seconds;
        }

        function getTimerValue() {
            var h = parseInt(document.getElementById('timer-hours').value) || 0;
            var m = parseInt(document.getElementById('timer-minutes').value) || 0;
            var s = parseInt(document.getElementById('timer-seconds').value) || 0;
            return (h * 3600) + (m * 60) + s;
        }

        document.getElementById('timer-start').addEventListener('click', function() {
            if (!timerRunning) {
                timerTotalSeconds = getTimerValue();

                if (timerTotalSeconds > 0) {
                    timerRunning = true;
                    document.getElementById('timer-alert').style.display = 'none';
                    
                    // Disable editing while running
                    document.getElementById('timer-hours').disabled = true;
                    document.getElementById('timer-minutes').disabled = true;
                    document.getElementById('timer-seconds').disabled = true;
                    
                    timerInterval = setInterval(function() {
                        timerTotalSeconds--;
                        formatTimerDisplay(timerTotalSeconds);

                        if (timerTotalSeconds <= 0) {
                            timerRunning = false;
                            clearInterval(timerInterval);
                            document.getElementById('timer-alert').style.display = 'block';
                            
                            // Re-enable editing
                            document.getElementById('timer-hours').disabled = false;
                            document.getElementById('timer-minutes').disabled = false;
                            document.getElementById('timer-seconds').disabled = false;
                            
                            // Play alert sound
                            var audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBTGH0fPTgjMGHm7A7+OZURE=');
                            audio.play().catch(function(e) {});
                        }
                    }, 1000);
                }
            }
        });

        document.getElementById('timer-stop').addEventListener('click', function() {
            timerRunning = false;
            clearInterval(timerInterval);
            
            // Re-enable editing
            document.getElementById('timer-hours').disabled = false;
            document.getElementById('timer-minutes').disabled = false;
            document.getElementById('timer-seconds').disabled = false;
        });

        document.getElementById('timer-reset').addEventListener('click', function() {
            timerRunning = false;
            clearInterval(timerInterval);
            document.getElementById('timer-alert').style.display = 'none';
            
            document.getElementById('timer-hours').value = '00';
            document.getElementById('timer-minutes').value = '00';
            document.getElementById('timer-seconds').value = '00';
            
            // Re-enable editing
            document.getElementById('timer-hours').disabled = false;
            document.getElementById('timer-minutes').disabled = false;
            document.getElementById('timer-seconds').disabled = false;
        });

        // Handle timer input validation
        var timerInputs = [
            document.getElementById('timer-hours'),
            document.getElementById('timer-minutes'),
            document.getElementById('timer-seconds')
        ];

        timerInputs.forEach(function(input) {
            input.addEventListener('input', function() {
                // Only allow numbers
                this.value = this.value.replace(/[^0-9]/g, '');
                
                // Limit values
                var val = parseInt(this.value) || 0;
                if (this.id === 'timer-hours' && val > 23) {
                    this.value = '23';
                } else if (this.id !== 'timer-hours' && val > 59) {
                    this.value = '59';
                }
                
                // Pad with zero if needed
                if (this.value.length === 1 && parseInt(this.value) < 10) {
                    this.value = '0' + this.value;
                }
            });

            input.addEventListener('focus', function() {
                this.select();
            });

            input.addEventListener('blur', function() {
                if (this.value === '' || this.value === '0') {
                    this.value = '00';
                } else if (this.value.length === 1) {
                    this.value = '0' + this.value;
                }
            });
        });
    </script>
</body>
</html>